#!/usr/bin/with-contenv bash
# shellcheck shell=bash


function connect_vpn()
{
  if [[ -z "$PROTONVPN_SERVER" ]]; then
    echo "[Service Connect] Using Fastest Server from ${PROTONVPN_COUNTRY}"
    PVPN_DEBUG="${DEBUG:-0}" /usr/local/bin/protonvpn c --cc "${PROTONVPN_COUNTRY:-NL}"
  else
    echo "[Service Connect] Using Server ${PROTONVPN_SERVER}"
    PVPN_DEBUG="${DEBUG:-0}" /usr/local/bin/protonvpn connect "${PROTONVPN_SERVER}"
  fi
}


function reconnect_vpn()
{
  echo "[Service Reconnect] Attempting..."
  if PVPN_DEBUG="${DEBUG:-0}" /usr/local/bin/protonvpn r; then
    echo "[Service Reconnect] Successful"
  else
    echo "[Service Reconnect] Failure!"
    echo "[Service Reconnect] Trying with a fresh connection!"
    connect_vpn
  fi
}

function gateway_check()
{
  primary_gw="$(route -n | grep 'proton' | grep 'UG[ \t]' | awk '{print $2}' | head -1)"
  if ping -q -i 0.1 -c 5 -W 5 "${primary_gw}"; then
    echo "[Service Check] Gateway Reachable"
  else
    echo "[Service Check] Error reaching gateway!, Reconnecting VPN"
    reconnect_vpn
  fi
}

function country_check()
{
  COUNTRY="$(curl -m 15 -sL https://api.protonvpn.ch/vpn/location | jq -r '.Country')"
  if [[ $COUNTRY == "${PROTONVPN_COUNTRY}" ]]; then
    echo "[Service Check] OK!"
  else
    echo "[Service Check] Failed, connected to #${COUNTRY} instead of #$PROTONVPN_COUNTRY"
    reconnect_vpn
  fi
}

function check_vpn()
{
# Because protonvpn-cli is a mess. Yes they too check it with PIDs no API is available to verify it.
# It is giant mess of subprocess.call(***). They are improving it though...
if [[ -z "$(pgrep -x openvpn)" ]]; then
  echo "[Service Check] Error!! There is no OpenVPN Process!!"
  reconnect_vpn
else
  echo "[Service Check] Process is alive!"
  case ${PROTONVPN_CHECK_MODE} in
    gateway | Gateway | Gateway)  echo "[Service Check] Mode is set to gateway";gateway_check;;
    country | Country | COUNTRY)  echo "[Service Check] Mode is set to country";country_check;;
    *)                            echo "[Service Check] Mode ${PROTONVPN_CHECK_MODE}, is INVALID. Falling back to gateway";
                                  gateway_check;;
  esac
fi
}




function main()
{
  echo "[Service Init] checking orphaned openvpn process"
  OVPN_PROCESS="$(pgrep -x openvpn)"
  if [[ -z ${OVPN_PROCESS} ]]; then
    echo "[Service Init] This appears to be a fresh start!"
    connect_vpn
  else
    echo "[Service Init] This appears to be a restart!, reconnecting to VPN with old settings"
    reconnect_vpn
  fi

  # Checks
  while :
  do
    echo "[Service Check] Running on $(date)"
    check_vpn
    sleep 10
  done
}

main "$@"
