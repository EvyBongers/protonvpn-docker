#!/usr/bin/with-contenv bash
# shellcheck shell=bash


function connect_vpn()
{
  if [[ -z "$PROTONVPN_SERVER" ]]; then
    echo "[Service Connect] Using Fastest Server from ${PROTONVPN_COUNTRY}"
    PVPN_DEBUG="${DEBUG:-0}" /usr/local/bin/protonvpn c --cc "${PROTONVPN_COUNTRY:-NL}"
  else
    if [[ -z "${PROTONVPN_COUNTRY}" ]]; then
      echo "ProtonVPN server is specified but country is empty!"
      exit 4
    fi
    echo "[Service Connect] Using Server ${PROTONVPN_SERVER}"
    PVPN_DEBUG="${DEBUG:-0}" /usr/local/bin/protonvpn connect "${PROTONVPN_SERVER}"
  fi
}


function reconnect_vpn()
{
  echo "[Service Reconnect] Attempting..."
  if PVPN_DEBUG="${DEBUG:-0}" /usr/local/bin/protonvpn r; then
    echo "[Service Reconnect] Successful"
  else
    echo "[Service Reconnect] Failure!"
    echo "[Service Reconnect] Trying with a fresh connection!"
    connect_vpn
  fi
}


function api_check()
{
  COUNTRY="$(curl -m 20 -sL https://api.protonvpn.ch/vpn/location | jq -r '.Country')"
  if [[ $COUNTRY == "" ]]; then
    echo "[Service Check] #$(( ++thrshold_f )) Timed out!"
      if [[ $thrshold_f -gt "${RECONNECT_THRESHOLD}" ]];then
        echo "[Service Check] failed > allowed times(${RECONNECT_THRESHOLD}), reconnecting!"
        reconnect_vpn
      fi
  elif [[ $COUNTRY == "${PROTONVPN_COUNTRY}" ]]; then
    echo "[Service Check] OK!"
    thrshold_f=0
  else
    echo "[Service Check] Failed, connected to #${COUNTRY} instead of #$PROTONVPN_COUNTRY"
    reconnect_vpn
  fi
}

function check_vpn()
{
# Because protonvpn-cli is a mess. Yes they too check it with PIDs no API is available to verify it.
# It is giant mess of subprocess.call(***). They are improving it though...
if [[ -z "$(pgrep -x openvpn)" ]]; then
  echo "[Service Check] Error!! There is no OpenVPN Process!!"
  reconnect_vpn
else
  api_check
fi
}


function main()
{

  re='^[0-9]+$'
  if ! [[ $LIVE_PROBE_INTERVAL =~ $re ]] ; then
    echo "LIVE_PROBE_INTERVAL can only be an integer!, will default to 120 seconds"
    LIVE_PROBE_INTERVAL=120
  else
    echo "Daemon check interval is set to #$LIVE_PROBE_INTERVAL"
  fi

  if ! [[ $RECONNECT_THRESHOLD =~ $re ]] ; then
    echo "RECONNECT_THRESHOLD can only be an integer!, will default to 10"
    RECONNECT_THRESHOLD=10
  else
    echo "Reconnect treshold is #$RECONNECT_THRESHOLD"
  fi

  echo "[Service Init] checking orphaned openvpn process"
  OVPN_PROCESS="$(pgrep -x openvpn)"
  if [[ -z ${OVPN_PROCESS} ]]; then
    echo "[Service Init] This appears to be a fresh start!"
    thrshold_f=0
    connect_vpn
  else
    echo "[Service Init] This appears to be a restart!, reconnecting to VPN with old settings"
    thrshold_f=0
    reconnect_vpn
  fi

  # Checks
  while :
  do
    check_vpn
    sleep "${LIVE_PROBE_INTERVAL}"
  done
}

main "$@"
